[gd_scene load_steps=27 format=3 uid="uid://bts1wjevjq4hc"]

[ext_resource type="Script" path="res://src/entities/control_stick.gd" id="1_okx1a"]

[sub_resource type="Shader" id="Shader_clbbd"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 4.0;
uniform bool is_targeted;

void vertex() {
	if (is_targeted)
	{
		vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
		vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
		
		vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
		
		clip_position.xy += offset;
		
		POSITION = clip_position;
	}
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_n2pry"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_clbbd")
shader_parameter/outline_color = Color(1, 1, 1, 1)
shader_parameter/outline_width = 2.0
shader_parameter/is_targeted = false

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7vp3a"]
next_pass = SubResource("ShaderMaterial_n2pry")
albedo_color = Color(0.166119, 0.211287, 0.251321, 1)

[sub_resource type="BoxMesh" id="BoxMesh_asdoo"]
resource_local_to_scene = true
material = SubResource("StandardMaterial3D_7vp3a")
size = Vector3(0.1, 0.05, 0.1)

[sub_resource type="BoxShape3D" id="BoxShape3D_5pauc"]
size = Vector3(0.25, 0.3, 0.25)

[sub_resource type="Shader" id="Shader_wy2vf"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 4.0;
uniform bool is_targeted;

void vertex() {
	if (is_targeted)
	{
		vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
		vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
		
		vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
		
		clip_position.xy += offset;
		
		POSITION = clip_position;
	}
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xiqfr"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_wy2vf")
shader_parameter/outline_color = Color(1, 1, 1, 1)
shader_parameter/outline_width = 2.0
shader_parameter/is_targeted = false

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ecx3c"]
next_pass = SubResource("ShaderMaterial_xiqfr")
albedo_color = Color(0.103744, 0.103744, 0.103744, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_yybb0"]
material = SubResource("StandardMaterial3D_ecx3c")
top_radius = 0.01
bottom_radius = 0.01
height = 0.1

[sub_resource type="Shader" id="Shader_2n2ba"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 4.0;
uniform bool is_targeted;

void vertex() {
	if (is_targeted)
	{
		vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
		vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
		
		vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
		
		clip_position.xy += offset;
		
		POSITION = clip_position;
	}
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ybuu1"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_2n2ba")
shader_parameter/outline_color = Color(1, 1, 1, 1)
shader_parameter/outline_width = 2.0
shader_parameter/is_targeted = false

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lu5x4"]
next_pass = SubResource("ShaderMaterial_ybuu1")
albedo_color = Color(1, 0, 0, 1)

[sub_resource type="SphereMesh" id="SphereMesh_4r1s2"]
material = SubResource("StandardMaterial3D_lu5x4")
radius = 0.025
height = 0.05

[sub_resource type="Animation" id="Animation_f3kqg"]
resource_name = "tilt_back"
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("TiltControl:rotation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TiltControl:rotation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("TiltControl:rotation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(-0.785398, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_44ikr"]
resource_name = "tilt_forward"
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("TiltControl:rotation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TiltControl:rotation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("TiltControl:rotation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.785398, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_epm0h"]
resource_name = "tilt_left"
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("TiltControl:rotation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.785398, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TiltControl:rotation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("TiltControl:rotation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_hnxkq"]
resource_name = "tilt_neutral"
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("TiltControl:rotation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TiltControl:rotation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("TiltControl:rotation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_b216y"]
resource_name = "tilt_right"
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("TiltControl:rotation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(-0.785398, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TiltControl:rotation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("TiltControl:rotation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_eyrw1"]
_data = {
"tilt_back": SubResource("Animation_f3kqg"),
"tilt_forward": SubResource("Animation_44ikr"),
"tilt_left": SubResource("Animation_epm0h"),
"tilt_neutral": SubResource("Animation_hnxkq"),
"tilt_right": SubResource("Animation_b216y")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_r088g"]
animation = &"tilt_back"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_4s6ah"]
animation = &"tilt_forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_0xrog"]
animation = &"tilt_right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_55gl4"]
animation = &"tilt_left"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_m6qne"]
animation = &"tilt_neutral"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_ial3j"]
blend_point_0/node = SubResource("AnimationNodeAnimation_r088g")
blend_point_0/pos = Vector2(0, -1)
blend_point_1/node = SubResource("AnimationNodeAnimation_4s6ah")
blend_point_1/pos = Vector2(0, 1)
blend_point_2/node = SubResource("AnimationNodeAnimation_0xrog")
blend_point_2/pos = Vector2(1, 0)
blend_point_3/node = SubResource("AnimationNodeAnimation_55gl4")
blend_point_3/pos = Vector2(-1, 0)
blend_point_4/node = SubResource("AnimationNodeAnimation_m6qne")
blend_point_4/pos = Vector2(0, 0)

[node name="ControlStick" type="StaticBody3D" groups=["interactable"]]
collision_layer = 8
collision_mask = 8
script = ExtResource("1_okx1a")

[node name="MeshInstance3DPad" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_asdoo")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.112705, 0)
shape = SubResource("BoxShape3D_5pauc")

[node name="TiltControl" type="Node3D" parent="."]
transform = Transform3D(0.929726, 0.368253, 0, -0.365848, 0.923653, 0.114105, 0.0420195, -0.106086, 0.993469, 0, 0, 0)

[node name="MeshInstanceStick" type="MeshInstance3D" parent="TiltControl"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0516827, 0)
mesh = SubResource("CylinderMesh_yybb0")

[node name="MeshInstanceBall" type="MeshInstance3D" parent="TiltControl"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0991174, 0)
mesh = SubResource("SphereMesh_4r1s2")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_eyrw1")
}
autoplay = "tilt_neutral"

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeBlendSpace2D_ial3j")
anim_player = NodePath("../AnimationPlayer")
parameters/blend_position = Vector2(0.1456, -0.480176)
