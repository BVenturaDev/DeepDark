[gd_resource type="StandardMaterial3D" load_steps=3 format=3 uid="uid://botq8e7fypm1a"]

[sub_resource type="Shader" id="Shader_b8rlu"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 4.0;
uniform bool is_targeted;

void vertex() {
	if (is_targeted)
	{
		vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
		vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
		
		vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
		
		clip_position.xy += offset;
		
		POSITION = clip_position;
	}
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lew4g"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_b8rlu")
shader_parameter/outline_color = Color(1, 1, 1, 1)
shader_parameter/outline_width = 2.0
shader_parameter/is_targeted = false

[resource]
next_pass = SubResource("ShaderMaterial_lew4g")
albedo_color = Color(1, 0, 0, 1)
